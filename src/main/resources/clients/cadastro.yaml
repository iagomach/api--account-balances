openapi: 3.0.0
info:
  title: API Cadastro
  version: 1.0.0
servers:
  - url: 'https://localhost:3000/customers/v1'
    description: Servidor de Desenvolvimento
tags:
  - name: Customers Accounts
    description: Operações para listagem das informações da Conta do Cliente
paths:
  '/accounts/{customerName}':
    get:
      tags:
        - Customers Accounts
      operationId: customersGetAccountsCustomerName
      parameters:
        - $ref: '#/components/parameters/customerName'
      responses:
        '200':
          $ref: '#/components/responses/OKResponseAccountIdentification'
  '/accounts/deposit':
    post:
      tags:
        - Customers Accounts
      operationId: customersPostDeposit
      parameters:
        - $ref: '#/components/parameters/customerName'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DepositRequest'
      responses:
        '204':
          description: Cadastro atualizado com sucesso.
components:
  schemas:
    AccountIdentificationData:
      type: object
      description: |
        Conjunto dos atributos que caracterizam as Contas de: depósito à vista, poupança e de pagamento pré-paga
      required:
        - compeCode
        - number
        - checkDigit
        - type
        - subtype
        - currency
        - status
        - balancesAmount
      properties:
        compeCode:
          type: string
          maxLength: 3
          pattern: '^\d{3}$'
          description: 'Código identificador atribuído pelo Banco Central do Brasil às instituições participantes do STR (Sistema de Transferência de reservas). O número-código substituiu o antigo código COMPE. Todos os participantes do STR, exceto as Infraestruturas do Mercado Financeiro (IMF) e a Secretaria do Tesouro Nacional, possuem um número-código independentemente de participarem da Centralizadora da Compensação de Cheques (Compe). O campo tem a anotação “n/a” (“não se aplica”) para os participantes do STR aos quais não é atribuído um número-código'
          example: '001'
        branchCode:
          type: string
          maxLength: 4
          pattern: '^\d{4}$'
          description: |
            Código da Agência detentora da conta. (Agência é a dependência destinada ao atendimento aos clientes, ao público em geral e aos associados de cooperativas de crédito, no exercício de atividades da instituição, não podendo ser móvel ou transitória)

            [Restrição] Obrigatoriamente deve ser preenchido quando o campo "type" for diferente de conta pré-paga.
          example: '6272'
        number:
          type: string
          maxLength: 20
          pattern: '^\d{8,20}$'
          description: |
            Número da conta
          example: '24550245'
        checkDigit:
          type: string
          maxLength: 1
          pattern: '[\w\W\s]*'
          description: |
            Dígito da conta
          example: '4'
        type:
          $ref: '#/components/schemas/EnumAccountType'
        subtype:
          $ref: '#/components/schemas/EnumAccountSubType'
        currency:
          type: string
          pattern: '^(\w{3}){1}$'
          maxLength: 3
          description: |
            Moeda referente ao valor da transação, segundo modelo ISO-4217. p.ex. 'BRL' 
            Todos os saldos informados estão representados com a moeda vigente do Brasil
          example: BRL
        status:
          $ref: '#/components/schemas/EnumAccountStatus'
        balancesTransferLimit:
          $ref: '#/components/schemas/BalancesTransferLimitData'
    BalancesTransferLimitData:
      type: object
      properties:
        availableAmount:
          type: number
          format: double
          example: '1000.00'
          description: Limite disponível para transferência
        maxSetAmount:
          type: number
          format: double
          example: '1000.00'
          description: Limite disponível para transferência
    EnumAccountSubType:
      type: string
      enum:
        - INDIVIDUAL
        - CONJUNTA_SIMPLES
        - CONJUNTA_SOLIDARIA
      description: |
        Subtipo de conta (vide Enum): 
        Conta individual - possui um único titular
        Conta conjunta simples - onde as movimentações financeiras só podem serem realizadas mediante autorização de TODOS os correntistas da conta.
        Conta conjunta solidária - é a modalidade cujos titulares podem realizar movimentações de forma isolada, isto é, sem que seja necessária a autorização dos demais titulares
      example: INDIVIDUAL
    EnumAccountType:
      type: string
      enum:
        - CONTA_DEPOSITO_A_VISTA
        - CONTA_POUPANCA
        - CONTA_PAGAMENTO_PRE_PAGA
      description: |
        Tipos de contas. Modalidades tradicionais previstas pela Resolução 4.753, não contemplando contas vinculadas, conta de domiciliados no exterior, contas em moedas estrangeiras e conta correspondente moeda eletrônica. Vide Enum
        Conta de depósito à vista ou Conta corrente - é o tipo mais comum. Nela, o dinheiro fica à sua disposição para ser sacado a qualquer momento. Essa conta não gera rendimentos para o depositante
        Conta poupança - foi criada para estimular as pessoas a pouparem. O dinheiro que ficar na conta por trinta dias passa a gerar rendimentos, com isenção de imposto de renda para quem declara. Ou seja, o dinheiro “cresce” (rende) enquanto ficar guardado na conta. Cada depósito terá rendimentos de mês em mês, sempre no dia do mês em que o dinheiro tiver sido depositado
        Conta de pagamento pré-paga: segundo CIRCULAR Nº 3.680, BCB de  2013, é a 'destinada à execução de transações de pagamento em moeda eletrônica realizadas com base em fundos denominados em reais previamente aportados'
      example: CONTA_DEPOSITO_A_VISTA
    EnumAccountStatus:
      type: string
      enum:
        - ACTIVE
        - INACTIVE
      description: |
        Status da conta, que pode estar ativa ou inativa.
      example: ACTIVE
    MetaOnlyRequestDateTime:
      type: object
      description: Meta informações referente à API requisitada.
      required:
        - requestDateTime
      properties:
        requestDateTime:
          description: 'Data e hora da consulta, conforme especificação RFC-3339, formato UTC.'
          type: string
          maxLength: 20
          format: date-time
          example: '2021-05-21T08:30:00Z'
    ResponseAccountIdentification:
      type: object
      required:
        - data
        - links
        - meta
      properties:
        data:
          $ref: '#/components/schemas/AccountIdentificationData'
        meta:
          $ref: '#/components/schemas/MetaOnlyRequestDateTime'
    DepositRequest:
      type: object
      required:
        - amount
      properties:
        name:
          type: string
          description: Nome completo do cliente que receberá dinheiro
          maxLength: 70
          pattern: ^[\w\W]*$
          example: Milton Nascimento
        amount:
          type: number
          minimum: 1
          format: double
          example: 1000.01
          description: Valor total (BRL) transferido.
  parameters:
    customerName:
      name: customerName
      in: path
      description: 'Nome completo do cliente.'
      required: true
      schema:
        type: string
        maxLength: 70
        pattern: ^[\w\W]*$
        example: Milton Nascimento
  responses:
    OKResponseAccountIdentification:
      description: Dados de identificação da conta identificada por customerName obtidos com sucesso.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ResponseAccountIdentification'